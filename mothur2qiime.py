""" When I wrote this scripts, mothur make.contigs function can deal with sequences with degenerated primers and unbalanced length of barcode (barcode length varies,e.g. from 6 to 10), this was not applicable to qiime at that time. Therefore, this script is aimed to bridge mothur and qiime; 
For multiplex samples, mothur saves the group info in a seperate *.groups file;
while qiime directly put the site information in the beginning of headline of each fasta file;
In the mothur group file, the 1st column contains the sequence name, the 2nd column contains the group name. For example:

AY457915	SiteA	
AY457914	SiteB	
AY457913	SiteB	
AY457912	SiteC

In qiime,the info will be represented like:
>SiteA_AY457915
>SiteB_AY457914
Be sure the fasta sequences should be ordered by sort.seqs in mothur as the same as group file
The script will rename the headline of *.contigs.fasta by *.groups file generated by make.contigs
Sizhong Yang, 2017-2-8 
"""

# load the required packages

from Bio import SeqIO
from Bio.SeqRecord import SeqRecord

# part 1, prepare new headlings from mothur *.groups file to qiime format
 

def formatHeader(handle):
    formated = []
    count = 1
    for line in handle:
        line = line.rstrip('\n')
        a,b = line.split('\t') # split the last two element
        b = b.split('.')[0]
        cc = b + '_' + a
        formated.append(cc) # new header
        count += 1
        if count%100000 == 0:
            print(count)


f1 = open("yourmothur.contigs.groups", 'r')
newnames = formatHeader(f1)
f1.close()


# part 2, renames the fasta 

hd_fasta = open("yourmothur.trim.contigs.fasta", "rU")

with open('yourmothur.renamed.contigs.fasta','w') as f2:
    for i, line in enumerate(SeqIO.parse(hd_fasta, 'fasta')):
        newrecord = SeqRecord(seq = line.seq, id = newnames[j].rstrip('\n'),\
                              description= line.description)
        SeqIO.write(newrecord, f2, 'fasta')
        if i%100000 == 0:
            print (str(i)+"seqs have been processed")

    print ("The fasta headlines have been renamed")

hd_fasta.close()        
